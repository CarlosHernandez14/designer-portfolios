/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.designer.views;

import com.designers.dao.Dao;
import com.designers.dao.ProjectsDao;
import com.designers.domain.Image;
import com.designers.domain.Profile;
import com.designers.domain.Project;
import com.designers.utils.PdfUtils;
import com.designers.views.designer.ProfileProjectsWindow;
import java.awt.Point;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.JViewport;
import javax.swing.Timer;
import jnafilechooser.api.JnaFileChooser;

public class PanelDesigner extends RoundedPanel {
    
    private Timer carouselTimer;   // Timer de Swing
    private int targetX;           // Posición final deseada

    private List<Project> profileProjects;
    private Profile profile;
    
    /**
     * Creates new form PanelDesigner
     */
    public PanelDesigner() {
        super(20);
        initComponents();
        
        this.panelFade.setVisible(false);
        this.buttonNext.setVisible(false);
        this.buttonPrev.setVisible(false);
        
        initData();
    }
    
    public PanelDesigner(Profile profile) {
        super(20);
        initComponents();
        
        this.panelFade.setVisible(false);
        this.buttonNext.setVisible(false);
        this.buttonPrev.setVisible(false);
        
        this.profile = profile;
        
        this.profileProjects = ProjectsDao.getProjectsByProfileId(this.profile.getIdProfile()); 
        
        initData();
    }
    
    public void initData() {
        
        initCarousel();
        
        // Initialize the rest of the data
        this.labelTittle.setText(this.profile.getName() + " " + this.profile.getLastname());
        
        
        this.textDescription.setText(this.profile.getSummary());
        
    }
    
    public void initCarousel() {
        
        this.panelCarousel.removeAll();
        
        // Load images
        List<Image> images = ProjectsDao.getFirstImageByProfileId(this.profile.getIdProfile());
        
        for (Image image : images) {
            ElementCarousel elCarousel = new ElementCarousel(image);
            this.panelCarousel.add(elCarousel);
        }
        
        this.panelCarousel.revalidate();
        this.panelCarousel.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        containerPanel = new javax.swing.JPanel();
        buttonViewProfile = new javax.swing.JButton();
        labelTittle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textDescription = new javax.swing.JTextArea();
        containerCarousel = new RoundedPanel(20);
        buttonNext = new javax.swing.JButton();
        buttonPrev = new javax.swing.JButton();
        panelFade = new org.edisoncor.gui.panel.PanelTranslucidoComplete2();
        scrollCarousel = new javax.swing.JScrollPane();
        panelCarousel = new RoundedPanel(20);
        panelImage1 = new PanelImageRedondeado();
        btnExportPortfolio = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        containerPanel.setBackground(new java.awt.Color(255, 255, 255));
        containerPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        containerPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                containerPanelformMouseClicked(evt);
            }
        });

        buttonViewProfile.setBackground(new java.awt.Color(0, 153, 204));
        buttonViewProfile.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        buttonViewProfile.setForeground(new java.awt.Color(255, 255, 255));
        buttonViewProfile.setText("Visualizar perfil");
        buttonViewProfile.setBorderPainted(false);
        buttonViewProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonViewProfileActionPerformed(evt);
            }
        });

        labelTittle.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        labelTittle.setForeground(new java.awt.Color(51, 51, 51));
        labelTittle.setText("Nombre del Diseñador");

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        textDescription.setEditable(false);
        textDescription.setBackground(new java.awt.Color(255, 255, 255));
        textDescription.setColumns(20);
        textDescription.setLineWrap(true);
        textDescription.setRows(5);
        textDescription.setText("Descripcion breve del proyecto realizado importante y como se llevo a cabo");
        jScrollPane1.setViewportView(textDescription);

        containerCarousel.setBackground(new java.awt.Color(255, 255, 255));
        containerCarousel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                containerCarouselMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                containerCarouselMouseExited(evt);
            }
        });
        containerCarousel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        buttonNext.setBackground(new java.awt.Color(255, 255, 255));
        buttonNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/buttonNext.png"))); // NOI18N
        buttonNext.setBorderPainted(false);
        buttonNext.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonNextActionPerformed(evt);
            }
        });
        containerCarousel.add(buttonNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(292, 90, 30, 30));

        buttonPrev.setBackground(new java.awt.Color(255, 255, 255));
        buttonPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/buttonPrevious.png"))); // NOI18N
        buttonPrev.setBorderPainted(false);
        buttonPrev.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        buttonPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPrevActionPerformed(evt);
            }
        });
        containerCarousel.add(buttonPrev, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 30, 30));

        panelFade.setBackground(new java.awt.Color(255, 255, 255));
        panelFade.setForeground(new java.awt.Color(255, 255, 255));
        panelFade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                panelFadeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                panelFadeMouseExited(evt);
            }
        });

        javax.swing.GroupLayout panelFadeLayout = new javax.swing.GroupLayout(panelFade);
        panelFade.setLayout(panelFadeLayout);
        panelFadeLayout.setHorizontalGroup(
            panelFadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );
        panelFadeLayout.setVerticalGroup(
            panelFadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );

        containerCarousel.add(panelFade, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, 200));

        scrollCarousel.setBackground(new java.awt.Color(255, 255, 255));
        scrollCarousel.setBorder(null);
        scrollCarousel.setForeground(new java.awt.Color(255, 255, 255));
        scrollCarousel.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        scrollCarousel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                scrollCarouselMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                scrollCarouselMouseExited(evt);
            }
        });

        panelCarousel.setBackground(new java.awt.Color(255, 255, 255));
        panelCarousel.setLayout(new javax.swing.BoxLayout(panelCarousel, javax.swing.BoxLayout.X_AXIS));

        panelImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/DefaultImage.jpg"))); // NOI18N

        javax.swing.GroupLayout panelImage1Layout = new javax.swing.GroupLayout(panelImage1);
        panelImage1.setLayout(panelImage1Layout);
        panelImage1Layout.setHorizontalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
        );
        panelImage1Layout.setVerticalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 201, Short.MAX_VALUE)
        );

        panelCarousel.add(panelImage1);

        scrollCarousel.setViewportView(panelCarousel);

        containerCarousel.add(scrollCarousel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, -1));

        btnExportPortfolio.setBackground(new java.awt.Color(0, 153, 204));
        btnExportPortfolio.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnExportPortfolio.setForeground(new java.awt.Color(255, 255, 255));
        btnExportPortfolio.setText("Exportar portafolio");
        btnExportPortfolio.setBorderPainted(false);
        btnExportPortfolio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportPortfolioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout containerPanelLayout = new javax.swing.GroupLayout(containerPanel);
        containerPanel.setLayout(containerPanelLayout);
        containerPanelLayout.setHorizontalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelLayout.createSequentialGroup()
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelTittle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)))
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(buttonViewProfile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnExportPortfolio, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(containerCarousel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        containerPanelLayout.setVerticalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelLayout.createSequentialGroup()
                .addComponent(containerCarousel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(labelTittle, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonViewProfile)
                    .addComponent(btnExportPortfolio))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void containerPanelformMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_containerPanelformMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_containerPanelformMouseClicked

    private void buttonViewProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonViewProfileActionPerformed
        // TODO add your handling code here:
        new ProfileProjectsWindow(profile).setVisible(true);
    }//GEN-LAST:event_buttonViewProfileActionPerformed

    private void scrollCarouselMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scrollCarouselMouseEntered
        // TODO add your handling code here:
        this.panelFade.setVisible(true);
        this.buttonNext.setVisible(true);
        this.buttonPrev.setVisible(true);
    }//GEN-LAST:event_scrollCarouselMouseEntered

    private void scrollCarouselMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scrollCarouselMouseExited
        // TODO add your handling code here:
        this.panelFade.setVisible(true);
        this.buttonNext.setVisible(true);
        this.buttonPrev.setVisible(true);
    }//GEN-LAST:event_scrollCarouselMouseExited

    private void panelFadeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelFadeMouseExited
        // TODO add your handling code here:
        this.panelFade.setVisible(false);
        this.buttonNext.setVisible(false);
        this.buttonPrev.setVisible(false);
    }//GEN-LAST:event_panelFadeMouseExited

    private void panelFadeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelFadeMouseEntered
        // TODO add your handling code here:
        this.panelFade.setVisible(true);
        this.buttonNext.setVisible(true);
        this.buttonPrev.setVisible(true);
    }//GEN-LAST:event_panelFadeMouseEntered

    private void containerCarouselMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_containerCarouselMouseExited
        // TODO add your handling code here:
        this.panelFade.setVisible(false);
        this.buttonNext.setVisible(false);
        this.buttonPrev.setVisible(false);

    }//GEN-LAST:event_containerCarouselMouseExited

    private void containerCarouselMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_containerCarouselMouseEntered
        // TODO add your handling code here:
        this.panelFade.setVisible(true);
        this.buttonNext.setVisible(true);
        this.buttonPrev.setVisible(true);
    }//GEN-LAST:event_containerCarouselMouseEntered

    private void buttonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonNextActionPerformed
        
        // 1) ancho de un elemento dentro de panelCarousel
        int elementWidth = panelCarousel.getComponent(0).getPreferredSize().width;

        // 2) viewport y posición actual
        JViewport vp = scrollCarousel.getViewport();
        Point viewPos = vp.getViewPosition();

        // 3) calcula destino y lo limita al máximo
        int maxX = panelCarousel.getWidth() - vp.getWidth();
        targetX = Math.min(viewPos.x + elementWidth, maxX);

        // 4) reinicia animación si está corriendo
        if (carouselTimer != null && carouselTimer.isRunning()) {
            carouselTimer.stop();
        }

        // 5) crea el timer
        carouselTimer = new Timer(10, e -> {
            Point p = vp.getViewPosition();
            int delta = (targetX - p.x) / 8;
            if (delta == 0) {
                delta = (targetX > p.x) ? 1 : -1;
            }
            int nextX = p.x + delta;

            vp.setViewPosition(new Point(nextX, p.y));

            // si llegamos o pasamos el target, lo fijamos y paramos
            if ((delta > 0 && nextX >= targetX) ||
                (delta < 0 && nextX <= targetX)) {
                vp.setViewPosition(new Point(targetX, p.y));
                carouselTimer.stop();
            }
        });

        // 6) arranca animación
        carouselTimer.start();
        
    }//GEN-LAST:event_buttonNextActionPerformed

    private void buttonPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPrevActionPerformed
        // TODO add your handling code here:
        
        // 1) ancho de un elemento dentro de panelCarousel
        int elementWidth = panelCarousel.getComponent(0).getPreferredSize().width;

        // 2) viewport y posición actual
        JViewport vp = scrollCarousel.getViewport();
        Point viewPos = vp.getViewPosition();

        // 3) calcula destino restando un slide y limita al mínimo (0)
        targetX = Math.max(viewPos.x - elementWidth, 0);

        // 4) reinicia animación si está corriendo
        if (carouselTimer != null && carouselTimer.isRunning()) {
            carouselTimer.stop();
        }

        // 5) crea el timer para animar la transición
        carouselTimer = new Timer(10, e -> {
            Point p = vp.getViewPosition();
            int delta = (targetX - p.x) / 8;
            if (delta == 0) {
                delta = (targetX > p.x) ? 1 : -1;
            }
            int nextX = p.x + delta;

            // mueve la vista
            vp.setViewPosition(new Point(nextX, p.y));

            // detiene cuando llega o sobrepasa el destino
            if ((delta > 0 && nextX >= targetX) ||
                (delta < 0 && nextX <= targetX)) {
                vp.setViewPosition(new Point(targetX, p.y));
                carouselTimer.stop();
            }
        });

        // 6) arranca la animación
        carouselTimer.start();
        
    }//GEN-LAST:event_buttonPrevActionPerformed

    private void btnExportPortfolioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportPortfolioActionPerformed
        
        try {

            JnaFileChooser fileChooser = new JnaFileChooser();
            fileChooser.addFilter("Archivos PDF", "pdf");
            if (fileChooser.showOpenDialog(null)) {

                File selectedFile = fileChooser.getSelectedFile();
                
                
                PdfUtils.exportPortfolio(profile, profileProjects, selectedFile);
                
                JOptionPane.showMessageDialog(null, "Portafolio exportado correctamente");
            }
            
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error al exportar el portafolio");
            System.out.println("Error al exportar portafolio: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnExportPortfolioActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportPortfolio;
    private javax.swing.JButton buttonNext;
    private javax.swing.JButton buttonPrev;
    private javax.swing.JButton buttonViewProfile;
    private javax.swing.JPanel containerCarousel;
    private javax.swing.JPanel containerPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelTittle;
    private javax.swing.JPanel panelCarousel;
    private org.edisoncor.gui.panel.PanelTranslucidoComplete2 panelFade;
    private org.edisoncor.gui.panel.PanelImage panelImage1;
    private javax.swing.JScrollPane scrollCarousel;
    private javax.swing.JTextArea textDescription;
    // End of variables declaration//GEN-END:variables
}
